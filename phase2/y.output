Terminals unused in grammar

   MINUS
   EQUAL
   END


State 52 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 115 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY
    5         | error

    6 declarations: %empty
    7             | declaration SEMICOLON declarations

    8 declaration: IDENT identifiers COLON INTEGER
    9            | IDENT identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | error

   11 identifiers: %empty
   12            | COMMA IDENT identifiers

   13 statements: statement SEMICOLON statements
   14           | statement SEMICOLON

   15 statement: var ASSIGN expression
   16          | IF bool_exp THEN statements ENDIF
   17          | IF bool_exp THEN statements ELSE statements ENDIF
   18          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   19          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   20          | FOREACH IDENT IN IDENT BEGINLOOP statements ENDLOOP
   21          | READ var vars
   22          | WRITE var vars
   23          | CONTINUE
   24          | RETURN expression
   25          | error

   26 bool_exp: relation_and_exp
   27         | bool_exp OR relation_and_exp

   28 relation_and_exp: relation_exp1
   29                 | relation_and_exp AND relation_exp1

   30 relation_exp1: relation_exp2
   31              | NOT relation_exp2

   32 relation_exp2: expression comp expression
   33              | TRUE
   34              | FALSE
   35              | L_PAREN bool_exp R_PAREN

   36 comp: EQ
   37     | NEQ
   38     | LT
   39     | GT
   40     | LTE
   41     | GTE

   42 expression: multiplicative_exp addition_exp

   43 addition_exp: %empty
   44             | ADD multiplicative_exp addition_exp
   45             | SUB multiplicative_exp addition_exp

   46 multiplicative_exp: term multi_term

   47 multi_term: %empty
   48           | MOD term multi_term
   49           | DIV term multi_term
   50           | MULT term multi_term

   51 term: posterm
   52     | SUB posterm
   53     | IDENT L_PAREN R_PAREN
   54     | IDENT L_PAREN expression expressions R_PAREN

   55 posterm: var
   56        | NUMBER
   57        | L_PAREN expression R_PAREN

   58 expressions: %empty
   59            | expression COMMA expressions

   60 var: IDENT
   61    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   62 vars: %empty
   63     | COMMA var vars


Terminals, with rules where they appear

$end (0) 0
error (256) 5 10 25
LT (258) 38
LTE (259) 40
GT (260) 39
GTE (261) 41
EQ (262) 36
NEQ (263) 37
MULT (264) 50
DIV (265) 49
ADD (266) 44
SUB (267) 45 52
MOD (268) 48
NOT (269) 31
AND (270) 29
OR (271) 27
ASSIGN (272) 15
FUNCTION (273) 4
BEGINPARAMS (274) 4
ENDPARAMS (275) 4
BEGINLOCALS (276) 4
ENDLOCALS (277) 4
BEGINBODY (278) 4
ENDBODY (279) 4
INTEGER (280) 8 9
ARRAY (281) 9
OF (282) 9
IF (283) 16 17
THEN (284) 16 17
ENDIF (285) 16 17
ELSE (286) 17
WHILE (287) 18 19
DO (288) 19
FOREACH (289) 20
IN (290) 20
BEGINLOOP (291) 18 19 20
ENDLOOP (292) 18 19 20
CONTINUE (293) 23
READ (294) 21
WRITE (295) 22
TRUE (296) 33
FALSE (297) 34
SEMICOLON (298) 4 7 13 14
COLON (299) 8 9
COMMA (300) 12 59 63
L_SQUARE_BRACKET (301) 9 61
R_SQUARE_BRACKET (302) 9 61
RETURN (303) 24
MINUS (304)
EQUAL (305)
L_PAREN (306) 35 53 54 57
R_PAREN (307) 35 53 54 57
END (308)
NUMBER (309) 9 56
IDENT (310) 4 8 9 12 20 53 54 60 61


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
functions (58)
    on left: 2 3, on right: 1 3
function (59)
    on left: 4 5, on right: 3
declarations (60)
    on left: 6 7, on right: 4 7
declaration (61)
    on left: 8 9 10, on right: 7
identifiers (62)
    on left: 11 12, on right: 8 9 12
statements (63)
    on left: 13 14, on right: 4 13 16 17 18 19 20
statement (64)
    on left: 15 16 17 18 19 20 21 22 23 24 25, on right: 13 14
bool_exp (65)
    on left: 26 27, on right: 16 17 18 19 27 35
relation_and_exp (66)
    on left: 28 29, on right: 26 27 29
relation_exp1 (67)
    on left: 30 31, on right: 28 29
relation_exp2 (68)
    on left: 32 33 34 35, on right: 30 31
comp (69)
    on left: 36 37 38 39 40 41, on right: 32
expression (70)
    on left: 42, on right: 15 24 32 54 57 59 61
addition_exp (71)
    on left: 43 44 45, on right: 42 44 45
multiplicative_exp (72)
    on left: 46, on right: 42 44 45
multi_term (73)
    on left: 47 48 49 50, on right: 46 48 49 50
term (74)
    on left: 51 52 53 54, on right: 46 48 49 50
posterm (75)
    on left: 55 56 57, on right: 51 52
expressions (76)
    on left: 58 59, on right: 54 59
var (77)
    on left: 60 61, on right: 15 21 22 55 63
vars (78)
    on left: 62 63, on right: 21 22 63


State 0

    0 $accept: . program $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 2 (functions)

    program    go to state 3
    functions  go to state 4
    function   go to state 5


State 1

    5 function: error .

    $default  reduce using rule 5 (function)


State 2

    4 function: FUNCTION . IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 6


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    1 program: functions .

    $default  reduce using rule 1 (program)


State 5

    3 functions: function . functions

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 5


State 6

    4 function: FUNCTION IDENT . SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: program $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: FUNCTION IDENT SEMICOLON . BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS . declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    ENDPARAMS  reduce using rule 6 (declarations)

    declarations  go to state 13
    declaration   go to state 14


State 11

   10 declaration: error .

    $default  reduce using rule 10 (declaration)


State 12

    8 declaration: IDENT . identifiers COLON INTEGER
    9            | IDENT . identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COMMA  shift, and go to state 15

    $default  reduce using rule 11 (identifiers)

    identifiers  go to state 16


State 13

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations . ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 17


State 14

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   12 identifiers: COMMA . IDENT identifiers

    IDENT  shift, and go to state 19


State 16

    8 declaration: IDENT identifiers . COLON INTEGER
    9            | IDENT identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 20


State 17

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 21


State 18

    7 declarations: declaration SEMICOLON . declarations

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    ENDPARAMS  reduce using rule 6 (declarations)
    ENDLOCALS  reduce using rule 6 (declarations)

    declarations  go to state 22
    declaration   go to state 14


State 19

   12 identifiers: COMMA IDENT . identifiers

    COMMA  shift, and go to state 15

    $default  reduce using rule 11 (identifiers)

    identifiers  go to state 23


State 20

    8 declaration: IDENT identifiers COLON . INTEGER
    9            | IDENT identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25


State 21

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    ENDLOCALS  reduce using rule 6 (declarations)

    declarations  go to state 26
    declaration   go to state 14


State 22

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 23

   12 identifiers: COMMA IDENT identifiers .

    $default  reduce using rule 12 (identifiers)


State 24

    8 declaration: IDENT identifiers COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 25

    9 declaration: IDENT identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 28


State 27

    9 declaration: IDENT identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 30


State 29

    9 declaration: IDENT identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    error     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statements  go to state 42
    statement   go to state 43
    var         go to state 44


State 31

    9 declaration: IDENT identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 45


State 32

   25 statement: error .

    $default  reduce using rule 25 (statement)


State 33

   16 statement: IF . bool_exp THEN statements ENDIF
   17          | IF . bool_exp THEN statements ELSE statements ENDIF

    SUB      shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    bool_exp            go to state 53
    relation_and_exp    go to state 54
    relation_exp1       go to state 55
    relation_exp2       go to state 56
    expression          go to state 57
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 34

   18 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    SUB      shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    bool_exp            go to state 62
    relation_and_exp    go to state 54
    relation_exp1       go to state 55
    relation_exp2       go to state 56
    expression          go to state 57
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 35

   19 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 63


State 36

   20 statement: FOREACH . IDENT IN IDENT BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 64


State 37

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 38

   21 statement: READ . var vars

    IDENT  shift, and go to state 41

    var  go to state 65


State 39

   22 statement: WRITE . var vars

    IDENT  shift, and go to state 41

    var  go to state 66


State 40

   24 statement: RETURN . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression          go to state 68
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 41

   60 var: IDENT .
   61    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 60 (var)


State 42

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 70


State 43

   13 statements: statement . SEMICOLON statements
   14           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 71


State 44

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 72


State 45

    9 declaration: IDENT identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 73


State 46

   52 term: SUB . posterm

    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 41

    posterm  go to state 74
    var      go to state 61


State 47

   31 relation_exp1: NOT . relation_exp2

    SUB      shift, and go to state 46
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    relation_exp2       go to state 75
    expression          go to state 57
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 48

   33 relation_exp2: TRUE .

    $default  reduce using rule 33 (relation_exp2)


State 49

   34 relation_exp2: FALSE .

    $default  reduce using rule 34 (relation_exp2)


State 50

   35 relation_exp2: L_PAREN . bool_exp R_PAREN
   57 posterm: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    bool_exp            go to state 76
    relation_and_exp    go to state 54
    relation_exp1       go to state 55
    relation_exp2       go to state 56
    expression          go to state 77
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 51

   56 posterm: NUMBER .

    $default  reduce using rule 56 (posterm)


State 52

   53 term: IDENT . L_PAREN R_PAREN
   54     | IDENT . L_PAREN expression expressions R_PAREN
   60 var: IDENT .
   61    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 69
    L_PAREN           shift, and go to state 78

    L_PAREN   [reduce using rule 60 (var)]
    $default  reduce using rule 60 (var)


State 53

   16 statement: IF bool_exp . THEN statements ENDIF
   17          | IF bool_exp . THEN statements ELSE statements ENDIF
   27 bool_exp: bool_exp . OR relation_and_exp

    OR    shift, and go to state 79
    THEN  shift, and go to state 80


State 54

   26 bool_exp: relation_and_exp .
   29 relation_and_exp: relation_and_exp . AND relation_exp1

    AND  shift, and go to state 81

    $default  reduce using rule 26 (bool_exp)


State 55

   28 relation_and_exp: relation_exp1 .

    $default  reduce using rule 28 (relation_and_exp)


State 56

   30 relation_exp1: relation_exp2 .

    $default  reduce using rule 30 (relation_exp1)


State 57

   32 relation_exp2: expression . comp expression

    LT   shift, and go to state 82
    LTE  shift, and go to state 83
    GT   shift, and go to state 84
    GTE  shift, and go to state 85
    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87

    comp  go to state 88


State 58

   42 expression: multiplicative_exp . addition_exp

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    SUB       [reduce using rule 43 (addition_exp)]
    $default  reduce using rule 43 (addition_exp)

    addition_exp  go to state 91


State 59

   46 multiplicative_exp: term . multi_term

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93
    MOD   shift, and go to state 94

    $default  reduce using rule 47 (multi_term)

    multi_term  go to state 95


State 60

   51 term: posterm .

    $default  reduce using rule 51 (term)


State 61

   55 posterm: var .

    $default  reduce using rule 55 (posterm)


State 62

   18 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP
   27 bool_exp: bool_exp . OR relation_and_exp

    OR         shift, and go to state 79
    BEGINLOOP  shift, and go to state 96


State 63

   19 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    error     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statements  go to state 97
    statement   go to state 43
    var         go to state 44


State 64

   20 statement: FOREACH IDENT . IN IDENT BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 98


State 65

   21 statement: READ var . vars

    COMMA  shift, and go to state 99

    $default  reduce using rule 62 (vars)

    vars  go to state 100


State 66

   22 statement: WRITE var . vars

    COMMA  shift, and go to state 99

    $default  reduce using rule 62 (vars)

    vars  go to state 101


State 67

   57 posterm: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression          go to state 102
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 68

   24 statement: RETURN expression .

    $default  reduce using rule 24 (statement)


State 69

   61 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression          go to state 103
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 70

    4 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 4 (function)


State 71

   13 statements: statement SEMICOLON . statements
   14           | statement SEMICOLON .

    error     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    ENDBODY  reduce using rule 14 (statements)
    ENDIF    reduce using rule 14 (statements)
    ELSE     reduce using rule 14 (statements)
    ENDLOOP  reduce using rule 14 (statements)

    statements  go to state 104
    statement   go to state 43
    var         go to state 44


State 72

   15 statement: var ASSIGN . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression          go to state 105
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 73

    9 declaration: IDENT identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 74

   52 term: SUB posterm .

    $default  reduce using rule 52 (term)


State 75

   31 relation_exp1: NOT relation_exp2 .

    $default  reduce using rule 31 (relation_exp1)


State 76

   27 bool_exp: bool_exp . OR relation_and_exp
   35 relation_exp2: L_PAREN bool_exp . R_PAREN

    OR       shift, and go to state 79
    R_PAREN  shift, and go to state 106


State 77

   32 relation_exp2: expression . comp expression
   57 posterm: L_PAREN expression . R_PAREN

    LT       shift, and go to state 82
    LTE      shift, and go to state 83
    GT       shift, and go to state 84
    GTE      shift, and go to state 85
    EQ       shift, and go to state 86
    NEQ      shift, and go to state 87
    R_PAREN  shift, and go to state 107

    comp  go to state 88


State 78

   53 term: IDENT L_PAREN . R_PAREN
   54     | IDENT L_PAREN . expression expressions R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    R_PAREN  shift, and go to state 108
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression          go to state 109
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 79

   27 bool_exp: bool_exp OR . relation_and_exp

    SUB      shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    relation_and_exp    go to state 110
    relation_exp1       go to state 55
    relation_exp2       go to state 56
    expression          go to state 57
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 80

   16 statement: IF bool_exp THEN . statements ENDIF
   17          | IF bool_exp THEN . statements ELSE statements ENDIF

    error     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statements  go to state 111
    statement   go to state 43
    var         go to state 44


State 81

   29 relation_and_exp: relation_and_exp AND . relation_exp1

    SUB      shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    relation_exp1       go to state 112
    relation_exp2       go to state 56
    expression          go to state 57
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 82

   38 comp: LT .

    $default  reduce using rule 38 (comp)


State 83

   40 comp: LTE .

    $default  reduce using rule 40 (comp)


State 84

   39 comp: GT .

    $default  reduce using rule 39 (comp)


State 85

   41 comp: GTE .

    $default  reduce using rule 41 (comp)


State 86

   36 comp: EQ .

    $default  reduce using rule 36 (comp)


State 87

   37 comp: NEQ .

    $default  reduce using rule 37 (comp)


State 88

   32 relation_exp2: expression comp . expression

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    expression          go to state 113
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 89

   44 addition_exp: ADD . multiplicative_exp addition_exp

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    multiplicative_exp  go to state 114
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 90

   45 addition_exp: SUB . multiplicative_exp addition_exp

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    multiplicative_exp  go to state 115
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 91

   42 expression: multiplicative_exp addition_exp .

    $default  reduce using rule 42 (expression)


State 92

   50 multi_term: MULT . term multi_term

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    term     go to state 116
    posterm  go to state 60
    var      go to state 61


State 93

   49 multi_term: DIV . term multi_term

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    term     go to state 117
    posterm  go to state 60
    var      go to state 61


State 94

   48 multi_term: MOD . term multi_term

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    term     go to state 118
    posterm  go to state 60
    var      go to state 61


State 95

   46 multiplicative_exp: term multi_term .

    $default  reduce using rule 46 (multiplicative_exp)


State 96

   18 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statements  go to state 119
    statement   go to state 43
    var         go to state 44


State 97

   19 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 120


State 98

   20 statement: FOREACH IDENT IN . IDENT BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 121


State 99

   63 vars: COMMA . var vars

    IDENT  shift, and go to state 41

    var  go to state 122


State 100

   21 statement: READ var vars .

    $default  reduce using rule 21 (statement)


State 101

   22 statement: WRITE var vars .

    $default  reduce using rule 22 (statement)


State 102

   57 posterm: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 107


State 103

   61 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 123


State 104

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 105

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 106

   35 relation_exp2: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 35 (relation_exp2)


State 107

   57 posterm: L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (posterm)


State 108

   53 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 53 (term)


State 109

   54 term: IDENT L_PAREN expression . expressions R_PAREN

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    $default  reduce using rule 58 (expressions)

    expression          go to state 124
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    expressions         go to state 125
    var                 go to state 61


State 110

   27 bool_exp: bool_exp OR relation_and_exp .
   29 relation_and_exp: relation_and_exp . AND relation_exp1

    AND  shift, and go to state 81

    $default  reduce using rule 27 (bool_exp)


State 111

   16 statement: IF bool_exp THEN statements . ENDIF
   17          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 126
    ELSE   shift, and go to state 127


State 112

   29 relation_and_exp: relation_and_exp AND relation_exp1 .

    $default  reduce using rule 29 (relation_and_exp)


State 113

   32 relation_exp2: expression comp expression .

    $default  reduce using rule 32 (relation_exp2)


State 114

   44 addition_exp: ADD multiplicative_exp . addition_exp

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    SUB       [reduce using rule 43 (addition_exp)]
    $default  reduce using rule 43 (addition_exp)

    addition_exp  go to state 128


State 115

   45 addition_exp: SUB multiplicative_exp . addition_exp

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    SUB       [reduce using rule 43 (addition_exp)]
    $default  reduce using rule 43 (addition_exp)

    addition_exp  go to state 129


State 116

   50 multi_term: MULT term . multi_term

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93
    MOD   shift, and go to state 94

    $default  reduce using rule 47 (multi_term)

    multi_term  go to state 130


State 117

   49 multi_term: DIV term . multi_term

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93
    MOD   shift, and go to state 94

    $default  reduce using rule 47 (multi_term)

    multi_term  go to state 131


State 118

   48 multi_term: MOD term . multi_term

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93
    MOD   shift, and go to state 94

    $default  reduce using rule 47 (multi_term)

    multi_term  go to state 132


State 119

   18 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 133


State 120

   19 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 134


State 121

   20 statement: FOREACH IDENT IN IDENT . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 135


State 122

   63 vars: COMMA var . vars

    COMMA  shift, and go to state 99

    $default  reduce using rule 62 (vars)

    vars  go to state 136


State 123

   61 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 61 (var)


State 124

   59 expressions: expression . COMMA expressions

    COMMA  shift, and go to state 137


State 125

   54 term: IDENT L_PAREN expression expressions . R_PAREN

    R_PAREN  shift, and go to state 138


State 126

   16 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 16 (statement)


State 127

   17 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    error     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statements  go to state 139
    statement   go to state 43
    var         go to state 44


State 128

   44 addition_exp: ADD multiplicative_exp addition_exp .

    $default  reduce using rule 44 (addition_exp)


State 129

   45 addition_exp: SUB multiplicative_exp addition_exp .

    $default  reduce using rule 45 (addition_exp)


State 130

   50 multi_term: MULT term multi_term .

    $default  reduce using rule 50 (multi_term)


State 131

   49 multi_term: DIV term multi_term .

    $default  reduce using rule 49 (multi_term)


State 132

   48 multi_term: MOD term multi_term .

    $default  reduce using rule 48 (multi_term)


State 133

   18 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)


State 134

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    SUB      shift, and go to state 46
    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    bool_exp            go to state 140
    relation_and_exp    go to state 54
    relation_exp1       go to state 55
    relation_exp2       go to state 56
    expression          go to state 57
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    var                 go to state 61


State 135

   20 statement: FOREACH IDENT IN IDENT BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statements  go to state 141
    statement   go to state 43
    var         go to state 44


State 136

   63 vars: COMMA var vars .

    $default  reduce using rule 63 (vars)


State 137

   59 expressions: expression COMMA . expressions

    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    $default  reduce using rule 58 (expressions)

    expression          go to state 124
    multiplicative_exp  go to state 58
    term                go to state 59
    posterm             go to state 60
    expressions         go to state 142
    var                 go to state 61


State 138

   54 term: IDENT L_PAREN expression expressions R_PAREN .

    $default  reduce using rule 54 (term)


State 139

   17 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 143


State 140

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .
   27 bool_exp: bool_exp . OR relation_and_exp

    OR  shift, and go to state 79

    $default  reduce using rule 19 (statement)


State 141

   20 statement: FOREACH IDENT IN IDENT BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 144


State 142

   59 expressions: expression COMMA expressions .

    $default  reduce using rule 59 (expressions)


State 143

   17 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)


State 144

   20 statement: FOREACH IDENT IN IDENT BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (statement)
